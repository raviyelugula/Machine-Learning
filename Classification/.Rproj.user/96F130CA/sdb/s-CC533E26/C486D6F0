{
    "collab_server" : "",
    "contents" : "require(readxl) ## read Excel Files\nrequire(dplyr) ## data manupulation\nrequire(usdm) ## VIF \nrequire(ggplot2) ## Visualization\nrequire(caTools) ## split\nrequire(class) ## KNN\n\n# reading the data\nexcel_sheets(path = 'training.xlsx')\ntraindata = read_excel(path = 'training.xlsx', sheet = 'training')\n\n# rename cols, new features, data type adjustments\ncolnames(traindata) = c('RowID','DLQs','Utlz_UnsecLines','DebtRatio',\n                        'Credit_Loans','Dependents')\ntraindata = traindata %>% \n            dplyr::select(DLQs,Utlz_UnsecLines,DebtRatio,Credit_Loans,Dependents) \ntraindata$UUL_flag = ifelse(traindata$Utlz_UnsecLines>1,1,0)\ntraindata$DR_flag = ifelse(traindata$DebtRatio>1,1,0)\nsapply(traindata,class)\ntraindata$Dependents = ifelse(traindata$Dependents =='NA',NA,traindata$Dependents)\ntraindata$Dependents = as.numeric(traindata$Dependents)\ntraindata[,c(1,6,7)] = data.frame(lapply(traindata[,c(1,6,7)],as.factor))\n\n# spliting into two kinds outliers and normal data\nT1_traindata = subset(traindata, UUL_flag == 1 | DR_flag == 1)\nT2_traindata = subset(traindata, UUL_flag == 0 & DR_flag == 0)\n\n# Missing data check\nMissing_data_Check <- function(data_set){\n  NA_Count = sapply(data_set,function(y) sum(length(which(is.na(y))))) \n  Null_Count = sapply(data_set,function(y) sum(length(which(is.null(y)))))\n  Length0_Count = sapply(data_set,function(y) sum(length(which(length(y)==0))))\n  Empty_Count = sapply(data_set,function(y) sum(length(which(y==''))))\n  Total_NonData = NA_Count+Null_Count+Length0_Count+Empty_Count\n  return( Total_NonData )\n}\nMissing_data_Check(T2_traindata)\nMissing_data_Check(T1_traindata)\n\n# Handling missing data \nvif(data.frame(T2_traindata[,c(2:4)]))\nT2_traindata_C = subset(T2_traindata,!is.na(Dependents))\nT2_traindata_M = subset(T2_traindata,is.na(Dependents))\n\nset.seed(123)\nsplit = sample.split(T2_traindata_C$Dependents, SplitRatio = 0.75)\nT2_traindata_C_Tr = subset(T2_traindata_C, split == TRUE)\nT2_traindata_C_Te = subset(T2_traindata_C, split == FALSE)\ndependents = knn(train = scale(T2_traindata_C_Tr[,c(2,3,4)]),\n             test = scale(T2_traindata_C_Te[,c(2,3,4)]),\n             cl = as.factor(T2_traindata_C_Tr$Dependents),\n             k = 9,\n             prob = F)\nprint(length(which(T2_traindata_C_Te$Dependents == dependents))/length(dependents))\nmodel = lm(Dependents~Utlz_UnsecLines+DebtRatio+Credit_Loans,\n           data=T2_traindata_C_Tr)\nsummary(model)\ndependents = round(predict(model,T2_traindata_C_Te))\nrm(list = c('T2_traindata_C_Te','T2_traindata_C_Tr'))\n\ndependents = knn(train = scale(T2_traindata_C[,c(2,3,4)]),\n                 test = scale(T2_traindata_M[,c(2,3,4)]),\n                 cl = as.factor(T2_traindata_C$Dependents),\n                 k = 9,\n                 prob = F)\nT2_traindata_M$Dependents = dependents\nT2_traindata = rbind(T2_traindata_C,T2_traindata_M)\nrm(list = c('T2_traindata_C','T2_traindata_M'))\nMissing_data_Check(T2_traindata)\n\nvif(data.frame(T1_traindata[,c(2:4)]))\nT1_traindata_C = subset(T1_traindata,!is.na(Dependents))\nT1_traindata_M = subset(T1_traindata,is.na(Dependents))\n\nset.seed(123)\nsplit = sample.split(T1_traindata_C$Dependents, SplitRatio = 0.75)\nT1_traindata_C_Tr = subset(T1_traindata_C, split == TRUE)\nT1_traindata_C_Te = subset(T1_traindata_C, split == FALSE)\ndependents = knn(train = scale(T1_traindata_C_Tr[,c(2,3,4)]),\n                 test = scale(T1_traindata_C_Te[,c(2,3,4)]),\n                 cl = as.factor(T1_traindata_C_Tr$Dependents),\n                 k = 9,\n                 prob = F)\nprint(length(which(T1_traindata_C_Te$Dependents == dependents))/length(dependents))\nmodel = lm(Dependents~Utlz_UnsecLines+DebtRatio+Credit_Loans,\n           data=T1_traindata_C_Tr)\nsummary(model)\ndependents = round(predict(model,T1_traindata_C_Te))\nprint(length(which(T1_traindata_C_Te$Dependents == dependents))/length(dependents))\nrm(list = c('T1_traindata_C_Te','T1_traindata_C_Tr'))\n\ndependents = knn(train = scale(T1_traindata_C[,c(2,3,4)]),\n                 test = scale(T1_traindata_M[,c(2,3,4)]),\n                 cl = as.factor(T1_traindata_C$Dependents),\n                 k = 9,\n                 prob = F)\nT1_traindata_M$Dependents = dependents\nT1_traindata = rbind(T1_traindata_C,T1_traindata_M)\nrm(list = c('T1_traindata_C','T1_traindata_M'))\nMissing_data_Check(T1_traindata)\n\n# Model building for T2 - 94:6 target varibale\n\n\n\n\n\n\n\n\n",
    "created" : 1509991119098.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3333610113",
    "id" : "C486D6F0",
    "lastKnownWriteTime" : 1510077967,
    "last_content_update" : 1510077967064,
    "path" : "~/GitHub/MachineLearningExamples/Classification/Classification_Modeling.R",
    "project_path" : "Classification_Modeling.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}